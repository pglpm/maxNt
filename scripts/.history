q()
n
q()
n
q()
n
a <- readcsv('testdcsv.csv',header=F)
a <- read.csv('testdcsv.csv',header=F)
a
length(a)
a <- read.csv('testdcsv.csv',header=F,sep="\n")
length(a)
a[1]
dim(a)
a <- c(read.csv('testdcsv.csv',header=F))
dim(a)
length(a)
a[1]
a <- read.csv('testdcsv.csv',header=F)
length(a)
a[1]
a[2]
q()
n
0*log(0)
v <- (0.3,0.4,0.5,0)
v <- c(0.3,0.4,0.5,0)
v*log(v)
sum(v*log(v))
sum(v*log(v),na.rm=T)
paste0('x',1:10)
v <- 1:5
v
sapply(1:6,function(x){prod(v(1:x-1))*v(x)})
sapply(1:6,function(x){prod(v[1:(x-1)])*v(x)})
sapply(1:6,function(x){prod(v[1:(x-1)])*v[x]})
sapply(1:6,function(x){prod(v[1:(x-1)])*(1-v[x])})
v[1:0]
v <- 2:5
v[1:0]
sapply(2:5,function(x){prod(v[1:(x-1)])*(1-v[x])})
sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])})
v
c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))
v <- rnorm(4)
v
v <- runif(4)
v
c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))
ft <- c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))
sum(ft)
v
nn <- 3
nn-(1:nn)
nn-(1:(nn-1))
sum((nn-(1:(nn-1)))*log(v[1:(nn-1)]))
parm <- v
    F <- c(1-parm[1],sapply(2:nn,function(x){prod(parm[1:(x-1)])*(1-parm[x])}),prod(parm))
F
sum(F)
parm
parm <- nunif(nn)
parm <- runif(nn)
parm
    F <- c(1-parm[1],sapply(2:nn,function(x){prod(parm[1:(x-1)])*(1-parm[x])}),prod(parm))
F
sum(F)
LP <- -sum(F*log(F/(1/(nn+1))),na.rm=T) +sum((nn-(1:(nn-1)))*log(parm[1:(nn-1)]))
LP
length(samples1)
samples1[1]
summary(usamples)
summary(usamples$Posterior1)
samples1
samples1[1:3,]
GIV(logprob,mydata,10,PGF=T)
 v
v <- 2:6
v
cumprod(v)
v <- 2:5
v
cumprod(v)
system.time(2^2)
system.time(for(i in 1:100){1})
system.time(for(i in 1:100){c(1,cumprov(v))*c(1-v,1)})
system.time(for(i in 1:100){c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){v <- rnorm(4),c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){v <- rnorm(4);c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){v <- rnorm(4);c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:1000){v <- rnorm(4);c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))})
v <- rnorm(4)
f1 <- c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))
f2 <- c(1,cumprod(v))*c(1-v,1)
f1==f2
v <- rnorm(4)
f1 <- c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))
f2 <- c(1,cumprod(v))*c(1-v,1)
f1==f2
system.time(for(i in 1:10000){v <- rnorm(4);c(1-v[1],sapply(2:4,function(x){prod(v[1:(x-1)])*(1-v[x])}),prod(v))})
system.time(for(i in 1:10000){v <- rnorm(4);c(1,cumprod(v))*c(1-v,1)})
sum(f1)
v
v[0]
v[0]+1
v
dim(samples2)
sf <- apply(samples1,1,mean)
dim(sf)
length(sf)
sf <- apply(samples1,1,function(v){c(1,cumprod(v))*c(1-v,1)})
dim(sf)
sf <- t(apply(samples1,1,function(v){c(1,cumprod(v))*c(1-v,1)}))
dim(sf)
chv <- function(v){c(1,cumprod(v))*c(1-v,1)}
system.time(for(i in 1:10000){v <- runif(4);a <- c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:10000){v <- runif(4);a <- chv(v)})
system.time(for(i in 1:100000){v <- runif(4);a <- c(1,cumprod(v))*c(1-v,1)})
system.time(for(i in 1:100000){v <- runif(4);a <- chv(v)})
)
prior
sapply(1:3,function(x){0:4})
sapply(1:3,function(x){c(0:4,x)})
nn <- 1[]
nn <- 10
n <- 5
a <- 3
lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn))
condt
condtt
sum((t(condt)-condtt)^2)
system.time(for(i in 1:1000){sapply(0:nn, function(aa){
    exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))
})})
system.time(for(i in 1:1000){ sapply(0:n, function(a){
    exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))
})})
system.time(for(i in 1:10000){sapply(0:nn, function(aa){
system.time(for(i in 1:10000){ sapply(0:n, function(a){
    exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))
})})
system.time(for(i in 1:10000){sapply(0:nn, function(aa){
    exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))
})})
nn <- 100
n <- 50
a
system.time(for(i in 1:10000){sapply(0:nn, function(aa){
    exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))
})})
system.time(for(i in 1:10){sapply(0:nn, function(aa){


    exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))







system.time(for(i in 1:10){sapply(0:nn, function(aa){exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))})})
system.time(for(i in 1:10){ sapply(0:n, function(a){exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))})})
nn
n
system.time(for(i in 1:100){sapply(0:nn, function(aa){exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))})})
system.time(for(i in 1:100){ sapply(0:n, function(a){exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))})})
system.time(for(i in 1:1000){sapply(0:nn, function(aa){exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))})})
system.time(for(i in 1:1000){ sapply(0:n, function(a){exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))})})
dim(condt)
system.time(for(i in 1:1000){ t(sapply(0:n, function(a){exp(lchoose(n,a)+lchoose(nn-n,(0:nn)-a)-lchoose(nn,(0:nn)))}))})
system.time(for(i in 1:1000){sapply(0:nn, function(aa){exp(lchoose(n,(0:n))+lchoose(nn-n,aa-(0:n))-lchoose(nn,aa))})})
condt
F
parm <- runif(nn)
F
condt%*%F
sum(condt%*%F)
f <- choose(n,0:n)/2^n
f
sum(f)
f <- choose(n,0:n+3)/2^n
f
sum(f)
f <- choose(n,0:n+3);f <- f/sum(f)
f
sum(f)
f <- choose(n,0:n+2);f <- f/sum(f)
f
f <- choose(n,(0:n)+1);f <- f/sum(f)
f
sum(f)
logprob(runif(nn),mydata)
sqrt( 417641)
logprob(runif(nn),mydata)
install.packages('doMC')
G
logprob(runif(nn),mydata)
dim(G)
parm <- runif(nn)
length(parm)
length(F)
dim(G)
GIV(logprob, mydata, n=1000, PGF=TRUE)
v <- rbind(v,GIV(logprob, mydata, n=1000, PGF=TRUE))
v
v
v <- GIV(logprob, mydata, n=1000, PGF=TRUE)
v <- rbind(v,GIV(logprob, mydata, n=1000, PGF=TRUE))
v
v <- rbind(v,GIV(logprob, mydata, n=1000, PGF=TRUE))
v
foreach(i=1:4,.combine='rbind)%do%{GIV(logprob, mydata, n=1000, PGF=TRUE)}
)
..
'
)
foreach(i=1:4,.combine='rbind')%do%{GIV(logprob, mydata, n=1000, PGF=TRUE)}
y <- 10
li <- list(y=y)
li$y
y <- 20
li$y
read.csv('stensola_activity_freqs_bins417641.csv')
read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=',')
c(read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=','))
read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=',')
unlist(read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=','))
c(unlist(read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=',')))
f <- c(unlist(read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=',')))
length(f)
q()
n
f
which(f!=0)
which(f>0)
ind <- which(f>0)
f[ind]
q()
n
library('LaplacesDemon')

rdirichlet(1,rep(1,10))
rdirichlet(1,rep(1,3))
ff <- rdirichlet(1,rep(1,3))
ff
sum(ff)
cumsum(ff)
ff <- rdirichlet(1,rep(1,4))
ff <- rdirichlet(1,rep(1,4));ff <- ff/sum(ff)
ff
1-cumsum(ff)
nn <- 4
ff <- rdirichlet(1,rep(1,nn+1));ff <- ff/sum(ff)
ff
1-cumsum(ff[-(nn+1)])
(1-cumsum(ff[-(nn+1)]))/c(1,1-cumsum(ff[-c(nn,nn+1)]))
xx <- (1-cumsum(ff[-(nn+1)]))/c(1,1-cumsum(ff[-c(nn,nn+1)]))
parm <- (1-cumsum(ff[-(nn+1)]))/c(1,1-cumsum(ff[-c(nn,nn+1)]))
c(1,cumprod(parm))*c(1-parm,1)
ff
ff
ff <- rdirichlet(1,rep(1,1000+1));ff <- ff/sum(ff)
system.time(for(1 in 1:100){diff(diff(ff))})
system.time(for(i in 1:100){diff(diff(ff))})
system.time(for(i in 1:10000){diff(diff(ff))})
system.time(for(i in 1:10000){diff(ff,differences=2)})
system.time(for(i in 1:100000){diff(diff(ff))})
system.time(for(i in 1:100000){diff(ff,differences=2)})
sum((diff(diff(ff))-diff(ff,differences=2))^2)
dim(G)
parm <- GIV(logprob, mydata, n=1000, PGF=TRUE)
dim(parm)
length(parm)
F
sum(F)
ct <- T*sum(f*log(G %*% F),na.rm=T)
dim(G)
dim(F)
length(F)
length(f)
df <- f[ind]
ct <- T*sum(df*log(G %*% F),na.rm=T)
ct
ct <- sum(df*log(G %*% F),na.rm=T)
ct
res <- foreach(a=ind) %:% foreach(aa=1:(nn+1))%do%{df[a]*log(G[a,aa]*F[aa])}
res <- sum(c(foreach(a=ind) %:% foreach(aa=1:(nn+1))%do%{df[a]*log(G[a,aa]*F[aa])}))
res <- sum(foreach(a=ind,.combine='cbind') %:% foreach(aa=1:(nn+1),.combine='c')%do%{df[a]*log(G[a,aa]*F[aa])}))
res <- sum(foreach(a=ind,.combine='cbind') %:% foreach(aa=1:(nn+1),.combine='c')%do%{df[a]*log(G[a,aa]*F[aa])})
res
ct
res <- sum(foreach(a=1:length(ind),.combine='cbind') %:% foreach(aa=1:(nn+1),.combine='c')%do%{df[a]*log(G[a,aa]*F[aa])})
res
res <- sum(foreach(a=1:length(ind),.combine='c') %do%{df[a]*log(sum(G[a,]*F))})
res
ct
system.time(for(i in 1:100){G %*% F})
system.time(for(i in 1:1000){G %*% F})
system.time(for(i in 1:1000){crossprod(G, F)})
system.time(for(i in 1:1000){crossprod(t(G), F)})
dim(G)
paste0('a',if(2<1){3},'b')
pre <- FALSE
if(!pre)
{}
if(!pre){3}
q()
n
f <- unlist(read.csv('stensola_activity_freqs_bins417641.csv',header=FALSE,sep=','))
ns <- length(f)-1
ns
t(gg) %*% f
t(ggg) %*% f
moms
(t(gg) %*% f)/moms
(t(ggc) %*% f)/moms
sum((t(ggc) %*% f)^2)
sum((t(ggc) %*% rep(1,ns+1)/(ns+1))^2)
T*sum((t(ggc) %*% f)^2)
T*sum((t(ggc) %*% rep(1,ns+1)/(ns+1))^2)
T^2*sum((t(ggc) %*% rep(1,ns+1)/(ns+1))^2)
T^2*sum((t(ggc) %*% (0.1*rep(1,ns+1)/(ns+1)+0.9*f)^2)
)
T^2*sum((t(ggc) %*% (0.1*rep(1,ns+1)/(ns+1)+0.9*f))^2)
T^2*sum((t(ggc) %*% (0.01*rep(1,ns+1)/(ns+1)+0.99*f))^2)
T^2*sum((t(ggc) %*% (0.001*rep(1,ns+1)/(ns+1)+0.999*f))^2)
T^2*sum((t(ggc) %*% (0*rep(1,ns+1)/(ns+1)+1*f))^2)
choose(990,1)/choose(1000,1)
choose(9999,1)/choose(10000,1)
choose(9999,6)/choose(10000,6)
choose(5000,6)/choose(10000,6)
choose(5000,1)/choose(10000,1)
sum((t(ggc) %*% f-(moms - t(ggg) %*% f))^2)
t(ggc) %*% f-(moms - t(ggg) %*% f)
sum(f)
q()
n
which(ff==0)
length(f)
length(ff)
ff[500:length(ff)] <- 0
ff[600]
sum1 <- sum(ff*log(ff),na.rm=TRUE)
sum1
ind <- which(ff>0)
f0 <- f[which(ff>0)]
f0 <- ff[which(ff>0)]
sum(f0*log(f0))
system.time(for(i in 1:1000){sum(ff*log(ff),na.rm=TRUE)})
system.time(for(i in 1:1000){f0 <- ff[which(ff>0)],sum(f0*log(f0))})
system.time(for(i in 1:1000){f0 <- ff[which(ff>0)];sum(f0*log(f0))})
system.time(for(i in 1:10000){sum(ff*log(ff),na.rm=TRUE)})
system.time(for(i in 1:10000){f0 <- ff[which(ff>0)];sum(f0*log(f0))})
system.time(for(i in 1:100000){sum(ff*log(ff),na.rm=TRUE)})
system.time(for(i in 1:100000){f0 <- ff[which(ff>0)];sum(f0*log(f0))})
system.time(for(i in 1:100000){sum(ff[which(ff>0)]*log(ff[which(ff>0)]))})
dim(G)
G[1:3,]
nn
length(poste)
x <- PGF(mydata)
parm <- PGF(mydata)
length(parm)
logprob(parm,mydata)
length(F)
dim(F)
F[1:5]
rev(1:10)
us <- readRDS('testmc_c6_p1_usamples_N1000_L500_s300_a1e+06.rds')
us$CovarDHis[nrow(usamples$CovarDHis),]
us$CovarDHis[nrow(us$CovarDHis),]
w <- us$CovarDHis[nrow(us$CovarDHis),]
min(w)
max(w)
us$Specs$m
mmm <- us$Specs$m
min(mmm)
max(mmm)
cco <- us$Covar
cco[1:10,1:10]
min(cco)
max(cco)
cco[1000,1000]
cco[1000,999]
diag(0.005670132,4)
which(ff>0)
ff[995:1001] <- 0
system.time(for(i in 1:10000){sum(ff*log(ff),na.rm=TRUE)})
system.time(for(i in 1:100000){sum(ff*log(ff),na.rm=TRUE)})
system.time(for(i in 1:100000){f0 <- ff[which(ff>0)];sum(f0*log(f0))})
10:3
dim(G)
G[1:10,]
G[990:1001,]
nn
)
parm <- PGF(mydata)
length(parm)
length(F)
ff <- rev(F)
parm2 <- (1-cumsum(ff[-(nn+1)]))/c(1,1-cumsum(ff[-c(nn,nn+1)]))
all(parm==parm2)
sum((parm-parm2)^2)
parm[1]
parm2[1]
parm[nn]
parm2[nn]
q()
n
